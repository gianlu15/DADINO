######### La struttura del progetto è così organizzata:

dadino
├── src
│   └──  main
│         ├── java                                   #codici sorgente del gioco (classi + main)
|         |    |
│         │    ├── CLASSI PER IL GIOCO   
│         │    └── Main.java
|         |
│         └── resources                             #risorse del gioco (immagini, file di testo, file FXML)
│                 
│                   
├── target
│   ├──  classes                                    #file di output compilati (.class) e file FXML
|   |      
|   |
|   └── test- classes                               #file di test
│              
|
└── pom.xml                                         #file di configurazione Maven che contiene le informazioni sul progetto, le dipendenze e i plugin necessari





Per installare Maven (FALLO IN bash O IN zsh):
https://www.youtube.com/watch?v=cbhCNjjvGOw&ab_channel=CodenboxAutomationLab






### Di seguito sono riportati alcuni dei comandi Maven più utilizzati:

- mvn clean: Pulisce i file generati dalla build precedente. Questo comando rimuove la directory target e tutti i file generati.

- mvn compile: Compila il codice sorgente del progetto.

- mvn test: Esegue i test unitari del progetto. Questo comando compila il codice e i test, quindi esegue i test.

- mvn install: Installa l'artefatto (ad esempio, il file JAR) nel repository locale, rendendolo disponibile per altri progetti Maven locali.

- mvn package: Crea l'artefatto del progetto (solitamente un file JAR) senza installarlo nel repository locale.

- mvn dependency:tree: Visualizza l'albero delle dipendenze del progetto, mostrando quali librerie sono utilizzate e le loro versioni.

- mvn clean install -DskipTests: Esegue una build completa, ma salta l'esecuzione dei test. Utile se vuoi solo compilare e installare l'artefatto senza eseguire i test.

- mvn clean package: Pulisce il progetto, compila il codice sorgente e crea l'artefatto (solitamente un file JAR).

- mvn clean verify: Pulisce il progetto, compila il codice sorgente, esegue i test e verifica che il progetto soddisfi tutti gli standard di qualità.

- mvn clean install -U: Esegue una build completa e forza l'aggiornamento delle snapshot delle dipendenze.